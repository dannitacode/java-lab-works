/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package IGU;

import java.util.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import Logica.Alumno;
import static IGU.JFrameMain.DbAlumno;
import java.util.InputMismatchException;
import javax.swing.JDesktopPane;

/**
 *
 * @author dannita
 */
public class JIFAlumno extends javax.swing.JInternalFrame {

    private boolean aux = false;
    private String regex = "[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$";
    private String regex2 = "\\d+";

    /**
     * Creates new form JInternalFrameAlumno
     */
    public JIFAlumno() {
        initComponents();
        jDateChooserFN.setDateFormatString("yyyy/MM/dd");
        ((javax.swing.JTextField) jDateChooserFN.getDateEditor().getUiComponent()).setEditable(false);
        Calendar calendar = Calendar.getInstance();
        calendar.set(Calendar.YEAR, 1950);
        calendar.set(Calendar.MONTH, Calendar.JANUARY);
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        Date maximo = calendar.getTime();
        jDateChooserFN.setMinSelectableDate(maximo);
        calendar.set(Calendar.YEAR, 2008);
        calendar.set(Calendar.MONTH, Calendar.JANUARY);
        calendar.set(Calendar.DAY_OF_MONTH, 1);
        Date minimo = calendar.getTime();
        jDateChooserFN.setMaxSelectableDate(minimo);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldBuscarPorDNI = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jButtonInsertar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonAlta = new javax.swing.JButton();
        jButtonBaja = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldNombre = new javax.swing.JTextField();
        jDateChooserFN = new com.toedter.calendar.JDateChooser();
        jTextFieldDNI = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldApellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setText("Gestión de alumnos");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jLabel6.setText("Buscar alumno por DNI:");

        jTableAlumnos.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAlumnos);

        jButtonInsertar.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jButtonActualizar.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        jButtonBorrar.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonBorrar.setText("Borrar");

        jButtonAlta.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonAlta.setText("Alta");

        jButtonBaja.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jButtonBaja.setText("Baja");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Ingreso de datos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Ubuntu", 0, 13))); // NOI18N

        jTextFieldNombre.setEnabled(false);

        jDateChooserFN.setEnabled(false);

        jTextFieldDNI.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jLabel3.setText("DNI:");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jLabel4.setText("Nombre:");

        jTextFieldApellido.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jLabel2.setText("Apellido:");

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        jLabel5.setText("Fecha de nacimiento:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(1, 1, 1))
                    .addComponent(jLabel2))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldNombre)
                    .addComponent(jTextFieldApellido)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserFN, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jDateChooserFN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(187, 187, 187))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldBuscarPorDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonInsertar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActualizar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAlta)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBaja)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInsertar)
                    .addComponent(jButtonActualizar)
                    .addComponent(jButtonBorrar)
                    .addComponent(jButtonAlta)
                    .addComponent(jButtonBaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldBuscarPorDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        if (aux == false) {
            habilitarCampos();
            deshabilitarBotones();
            jButtonInsertar.setEnabled(true);
            aux = true;
            return;
        }
        if (aux == true) {
            try {
                if (!jTextFieldNombre.getText().matches(regex) || jTextFieldNombre.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Nombre'.");
                    return;
                } else if (!jTextFieldApellido.getText().matches(regex) || jTextFieldApellido.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Apellido'.");
                    return;
                } else if (!jTextFieldDNI.getText().matches(regex2) || jTextFieldDNI.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'DNI'.");
                    return;
                } else if (jDateChooserFN.getDate() == null) {
                    JOptionPane.showMessageDialog(this, "Asegurese escoger una fecha para el campo de 'Fecha de nacimiento'.");
                    return;
                }
                DbAlumno.ingresarAlumno(new Alumno(Integer.parseInt(jTextFieldDNI.getText()), jTextFieldNombre.getText(), jTextFieldApellido.getText(), jDateChooserFN.getDate()));
                aux = false;
                limpiarCampos();
                deshabilitarCampos();
                habilitarBotones();
            } catch (InputMismatchException ime) {
                ime.printStackTrace();
            } catch (NumberFormatException nfe) {
                nfe.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed

        if (aux == false) {
            habilitarCampos();
            deshabilitarBotones();
            jButtonActualizar.setEnabled(true);
            aux = true;
            JOptionPane.showMessageDialog(this, "Debe ingresar todos los datos que se someteran a actualizacion del alumno");
            return;
        }
        if (aux == true) {
            try {
                if (!jTextFieldNombre.getText().matches(regex) || jTextFieldNombre.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Nombre'.");
                    return;
                } else if (!jTextFieldApellido.getText().matches(regex) || jTextFieldApellido.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'Apellido'.");
                    return;
                } else if (!jTextFieldDNI.getText().matches(regex2) || jTextFieldDNI.getText().isBlank()) {
                    JOptionPane.showMessageDialog(this, "Asegurese de ingresar datos correctos en el campo de 'DNI'.");
                    return;
                } else if (jDateChooserFN.getDate() == null) {
                    JOptionPane.showMessageDialog(this, "Asegurese escoger una fecha para el campo de 'Fecha de nacimiento'.");
                    return;
                }
                String dniReferencia = null;
                int dniParseado = 0;
                boolean res = false;

                do {
                    try {
                        dniReferencia = JOptionPane.showInputDialog(this, "Ingrese el DNI de referencia al alumno que desea cambiarle sus datos.");
                        if (dniReferencia == null) {
                            return;
                        }
                        if (!dniReferencia.matches(regex2) || dniReferencia.isBlank()) {
                            JOptionPane.showMessageDialog(this, "Asegurese de ingresar un DNI válido.");
                        } else {
                            dniParseado = Integer.parseInt(dniReferencia);
                            res = DbAlumno.actualizarAlumno(Integer.parseInt(jTextFieldDNI.getText()), jTextFieldNombre.getText(), jTextFieldApellido.getText(), jDateChooserFN.getDate(), dniParseado);
                        }
                    } catch (NumberFormatException | NullPointerException e) {
                        e.printStackTrace();
                    }
                } while (res == false);
                aux = false;
                limpiarCampos();
                deshabilitarCampos();
                habilitarBotones();
            } catch (InputMismatchException | NumberFormatException | NullPointerException e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void deshabilitarCampos() {
        jTextFieldNombre.setEnabled(false);
        jTextFieldApellido.setEnabled(false);
        jTextFieldDNI.setEnabled(false);
        jDateChooserFN.setEnabled(false);
    }

    private void deshabilitarBotones() {
        jButtonInsertar.setEnabled(false);
        jButtonActualizar.setEnabled(false);
        jButtonBorrar.setEnabled(false);
        jButtonAlta.setEnabled(false);
        jButtonBaja.setEnabled(false);
    }

    private void habilitarCampos() {
        jTextFieldNombre.setEnabled(true);
        jTextFieldApellido.setEnabled(true);
        jTextFieldDNI.setEnabled(true);
        jDateChooserFN.setEnabled(true);
    }

    private void habilitarBotones() {
        jButtonInsertar.setEnabled(true);
        jButtonActualizar.setEnabled(true);
        jButtonBorrar.setEnabled(true);
        jButtonAlta.setEnabled(true);
        jButtonBaja.setEnabled(true);
    }

    private void limpiarCampos() {
        jTextFieldNombre.setText("");
        jTextFieldApellido.setText("");
        jTextFieldDNI.setText("");
        jDateChooserFN.setDate(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonAlta;
    private javax.swing.JButton jButtonBaja;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonInsertar;
    private com.toedter.calendar.JDateChooser jDateChooserFN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldBuscarPorDNI;
    private javax.swing.JTextField jTextFieldDNI;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

    void setLocationRelativeTo(JDesktopPane Escritorio) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
