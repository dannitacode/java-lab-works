/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package IGU;

import Logica.Alumno;
import Logica.Materia;
import Logica.Inscripcion;
import static IGU.JFrameMain.DbInscripcion;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author dannita
 */
public class JIFInscripcion extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIFInscripcion
     */
    public JIFInscripcion() {
        initComponents();
        cargarAlumnos();
        cargarMaterias();
        
        jRadioButtonMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscripciones();
            }
        });
        
         jRadioButtonMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inscripciones();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxAlumno = new javax.swing.JComboBox<>();
        jComboBoxMaterias = new javax.swing.JComboBox<>();
        jRadioButtonMateriasInscriptas = new javax.swing.JRadioButton();
        jRadioButtonMateriasNoInscriptas = new javax.swing.JRadioButton();
        jButtonInscribir = new javax.swing.JButton();
        jButtonAnularInscripcion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel1.setText("Alumno:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("Materias:");

        jComboBoxAlumno.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        jComboBoxMaterias.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        buttonGroup.add(jRadioButtonMateriasInscriptas);
        jRadioButtonMateriasInscriptas.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jRadioButtonMateriasInscriptas.setText("Ver materias inscriptas");

        buttonGroup.add(jRadioButtonMateriasNoInscriptas);
        jRadioButtonMateriasNoInscriptas.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jRadioButtonMateriasNoInscriptas.setText("Ver materias no inscriptas");

        jButtonInscribir.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButtonInscribir.setText("Inscribir");
        jButtonInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInscribirActionPerformed(evt);
            }
        });

        jButtonAnularInscripcion.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButtonAnularInscripcion.setText("Anular inscripcion");
        jButtonAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnularInscripcionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel3.setText("Gesti√≥n de inscripciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jButtonInscribir)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonAnularInscripcion))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxMaterias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jRadioButtonMateriasInscriptas)
                            .addComponent(jRadioButtonMateriasNoInscriptas)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRadioButtonMateriasInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonMateriasNoInscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonInscribir)
                    .addComponent(jButtonAnularInscripcion))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInscribirActionPerformed
        Alumno alumnoSel = (Alumno) jComboBoxAlumno.getSelectedItem();
        Materia materiaSel = (Materia) jComboBoxMaterias.getSelectedItem();
        List<Inscripcion> listaInscripciones = DbInscripcion.listaInscripciones();
        boolean aux = false;
        for (Inscripcion inscripciones : listaInscripciones) {
            if (inscripciones.getAlumno().getIdAlumno() == alumnoSel.getIdAlumno() && inscripciones.getMateria().getId() == materiaSel.getId()) {
                aux = true;
                break;
            } 
        }
        if (aux == true) {
            JOptionPane.showMessageDialog(null, "El alumno ya se encuentra inscripto a esa materia.");
        } else  {
            DbInscripcion.inscribirAlumno(alumnoSel, materiaSel);
        }
    }//GEN-LAST:event_jButtonInscribirActionPerformed

    private void jButtonAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnularInscripcionActionPerformed
        Alumno alumnoSel = (Alumno) jComboBoxAlumno.getSelectedItem();
        Materia materiaSel = (Materia) jComboBoxMaterias.getSelectedItem();
        List<Inscripcion> listaInscripciones = DbInscripcion.listaInscripciones();
        boolean aux = false;
        int idIns = 0;
        for (Inscripcion inscripciones : listaInscripciones) {
            if (inscripciones.getAlumno().getIdAlumno() == alumnoSel.getIdAlumno() && inscripciones.getMateria().getId() == materiaSel.getId()) {
                idIns = inscripciones.getId();
                aux = true;
                break;
            } 
        }
        if (aux == true) {
            DbInscripcion.anularInscripcion(idIns);
        } else  {
            JOptionPane.showMessageDialog(this, "El alumno no se encuentra inscripto a esa materia.");
        }
    }//GEN-LAST:event_jButtonAnularInscripcionActionPerformed

    private void cargarAlumnos() {
        if (JFrameMain.listaAlumnos != null) {
            for (Alumno alumno : JFrameMain.listaAlumnos) {
                jComboBoxAlumno.addItem(alumno);
            }
        }
    }
    
    private void cargarMaterias() {
        jComboBoxMaterias.removeAllItems();
        if (JFrameMain.listaMaterias != null) {
            for (Materia materia : JFrameMain.listaMaterias) {
                jComboBoxMaterias.addItem(materia);
            }
        }
    }
    
    private void inscripciones() {
        boolean verIns = jRadioButtonMateriasInscriptas.isSelected();
        boolean verNoIns = jRadioButtonMateriasNoInscriptas.isSelected();
        Alumno alumnoSel = (Alumno) jComboBoxAlumno.getSelectedItem();

        List<Inscripcion> listaInscripciones = DbInscripcion.listaInscripciones();
        jComboBoxMaterias.removeAllItems();
        for (Materia materia : JFrameMain.listaMaterias) {
            boolean estaIns = false;
            for (Inscripcion inscripcion : listaInscripciones) {
                if (inscripcion.getAlumno().getIdAlumno() == alumnoSel.getIdAlumno() && inscripcion.getMateria().getId() == materia.getId()) {
                    estaIns = true;
                    break;
                }
            }
            if (verIns == true && estaIns == true) {
                jComboBoxMaterias.addItem(materia);
            } else if (verNoIns == true && !estaIns) {
                jComboBoxMaterias.addItem(materia);
            }
        }

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jButtonAnularInscripcion;
    private javax.swing.JButton jButtonInscribir;
    private javax.swing.JComboBox<Alumno> jComboBoxAlumno;
    private javax.swing.JComboBox<Materia> jComboBoxMaterias;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButtonMateriasInscriptas;
    private javax.swing.JRadioButton jRadioButtonMateriasNoInscriptas;
    // End of variables declaration//GEN-END:variables
}
