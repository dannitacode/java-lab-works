/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Interfaz;

import javax.swing.DefaultListModel;
import Logica.Contacto;
import static Interfaz.JFMenuPrincipal.directorio;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dannita
 */
public class JIFBorrarCliente extends javax.swing.JInternalFrame {
    private DefaultListModel modeloLista;
    
    private DefaultTableModel modeloTabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form JIFBorrarCliente
     */
    public JIFBorrarCliente() {
        initComponents();
        this.modeloLista = new DefaultListModel();
        jListDNI.setModel(modeloLista);
        jTextFieldDNI.setEditable(false);
        for (Contacto contacto : directorio.getMapaDirectorio().values()) {
            modeloLista.addElement(String.valueOf(contacto.getDni()));
        }
        columnas();
        jListDNI.addListSelectionListener((ListSelectionEvent clickItem) -> {
            if (!clickItem.getValueIsAdjusting()) {
                rows();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDNI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDNI = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaContenido = new javax.swing.JTable();
        jButtonBorrarCliente = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("Borrar Cliente");

        jLabel2.setText("DNI:");

        jScrollPane1.setViewportView(jListDNI);

        jTablaContenido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablaContenido);

        jButtonBorrarCliente.setText("Borrar cliente");
        jButtonBorrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarClienteActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Salir");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jButtonBorrarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonSalir))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(288, 288, 288))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBorrarCliente)
                    .addComponent(jButtonSalir))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonBorrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarClienteActionPerformed
        String dniAuxiliar = jListDNI.getSelectedValue();
        if (dniAuxiliar == null) {
            JOptionPane.showMessageDialog(this, "Seleccione un DNI antes de continuar.");
        }
        Long telefono = null;
        for (Map.Entry<Long, Contacto> entry : directorio.getMapaDirectorio().entrySet()) {
            Long key = entry.getKey();
            Contacto val = entry.getValue();
            if (String.valueOf(val.getDni()).equals(dniAuxiliar)) {
                telefono = key;
                directorio.borrarContacto(telefono);
                modeloLista.removeElement(dniAuxiliar);
                modeloTabla.setRowCount(0);
                jTextFieldDNI.setText(null);
                JOptionPane.showMessageDialog(this, "Cliente eliminado.");
            }
        }
    }//GEN-LAST:event_jButtonBorrarClienteActionPerformed
    
    private void columnas() {
        modeloTabla.addColumn("DNI");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Apellido");
        modeloTabla.addColumn("Ciudad");
        modeloTabla.addColumn("Domicilio");
        modeloTabla.addColumn("Telefono");
        jTablaContenido.setModel(modeloTabla);
    }
    
    private void rows() {
        modeloTabla.setRowCount(0);
        for (Map.Entry<Long, Contacto> entry : directorio.getMapaDirectorio().entrySet()) {
            Long telefono = entry.getKey();
            Contacto contacto = entry.getValue();
            String dniAuxiliar = String.valueOf(contacto.getDni());
            if (dniAuxiliar.equals(jListDNI.getSelectedValue())) {
                jTextFieldDNI.setText(jListDNI.getSelectedValue());
                Object[] row = {
                    contacto.getDni(), contacto.getNombre(), contacto.getApellido(), contacto.getCiudad(), contacto.getDireccion(), telefono
                };
                modeloTabla.addRow(row);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrarCliente;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jListDNI;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablaContenido;
    private javax.swing.JTextField jTextFieldDNI;
    // End of variables declaration//GEN-END:variables
}
